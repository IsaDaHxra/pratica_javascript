SOBRE O JAVASCRIPT:

- Ela é uma linguagem de programação de alto nível.
- Sua principal função é deixar a página viva, adicionando comportamentos (alteração de HTML e CSS) através de eventos (Isso no front-end).
- JavaScript é case sensitive, ou seja, quando cria uma variável com o mesmo nome porém com alguma letra ou a palavra inteira maiúscula ou 
  minúscula, não são caracterizadas como a mesma variável.

ONDE O JAVASCRIPT É UTILIZADO?

- Interação com a página, HTML e CSS, através do DOM (O dom é basicamente uma cópia do HTML no objeto dp js)
- Cálculo, manipulação, e validação de dados;
- É empregado também no server-side, com Node.js (back-end)
- As principais bibliotecas de Front-end são baseadas em js (react,vue, angular, Svelte...)

FORMAS DE EXECUTAR JS:

- Padrão: arquivo importado no HTML
- Diretamente no navegador, através do Console
- Por meio de aplicações, como o JS Fiddle

COMANDOS:

- console.log: É como se fosse o print do js
- Sempre coloque ; no final de uma linha (igual java)
- Para integrar um arquivo js externo ao html, é só linkar no html com o <script src="nome-arquivo.js">.

O QUE SÃO TIPOS DE DADOS?

- Forma de classificar um dado
- Temos como dado: "Isabelly", 15, true, [] (a lista é um array, ou seja, um object.)
- Os tipos de dados mais comuns são Number, String, Boolean, Empty values (null, undefined), Object.
- Todos os números são number, não há uma diferença na classifação deles.
* Toda comparação resulta em um boolean.
- No JavaScript, o operador typeof exibe o tipo de dado.

NUMBERS

- Podemos realizar equações no js
- Os operadores que podemos usar também são: +, -, *, /
- Temos os Special Numbers, eles são dados considerados como números, mas não funcionam como eles.
  -> Infinity, -Infinity, NaN (Not a number)
  -> Algumas operações podem resultar nesses valores

STRINGS

- No JS temos três formas de criar dados de texto, sendo eles as aspas simples, duplas e crases.
- O "efeito final" é o mesmo, porém cada um deles tem suas particularidades.
- A concatenação é feita pelo operador +
- A interpolação no JS é ${ Algum código } (a interpolação é tipo o %d do java, {variável} em python..)
  -> Ela deve ser escrita `entre crases`.

COMPARAÇÕES

- As comparações que podemos utilizar são
  -> Maior e menor: > e <
  -> Igual: ==
  -> Diferente: !=
  -> Idêntico: === (também temos o !==)
  * Eles funcionam como == e !=, mas eles levam em consideração o tipo do dado. Por exemplo: 9 == "9" dá true, pois o valor é o mesmo. 9 === "9"
    resulta em false, pois um é String e outro é Number, portanto, não são iguais.
  * Devemos ao máximo tentar utilizá-los

OPERADORES LÓGICOS

- && Corresponde a AND.
- || Corresponde a OR.
- ! Corresponde a NOT.

            - TABELA VERDADE -

  |  A  |  B  | A and B | A or B |  Not A |
  |False|False|  False  | False  | False  |
  |False|True |  False  | True   |  True  |
  |True |False|  False  | True   | False  |
  |True |True |  True   | True   | False  |

EMPTY VALUES

- Temos duas palavras que pertencem a este grupo de dados: undefined e null
- undefined geralmente é vista quando usamos um código que não foi definido ainda (variáveis por exemplo)
- O null geralmente é colocado pelo programador para determinar o que ainda não tem um valor

CONVERSÃO DE TIPO AUTOMÁTICA

- No js algumas operações mudam de tipo de dado, e isso acontece "silenciosamente"
  * Exemplos *
   5 * null = 0            
   "5" - 3  = 2
   "5" + 1  = 51
   "a" * "b" = NaN

ADICIONAIS

- Os comentários em js são // também.
- A cor do "output" no console muda de acordo com o tipo de dado, por exemplo: String -> Preto | Number -> Azul
- O \n e o \t funciona no JS!!! UHUU (o \t é tipo um espaçamento do tab)

